{"version":3,"sources":["serviceWorker.ts","redux/login/types.ts","components/login/loginComponent.tsx","redux/login/actions.tsx","containers/loginContainer.tsx","redux/registration/types.ts","components/register/registerComponent.tsx","redux/registration/actions.tsx","containers/registerContainer.tsx","redux/addToCart/types.ts","redux/addToCart/actions.tsx","redux/showBooks/types.ts","components/home/imageMediaCart.tsx","components/home/homeComponent.tsx","components/homeAdmin/modalEditComponent.tsx","redux/showBooks/actions.tsx","components/homeAdmin/modalAddComponent.tsx","components/homeAdmin/tableBooks.tsx","redux/showUsers/types.ts","redux/showUsers/actions.tsx","components/homeAdmin/tableUsers.tsx","components/homeAdmin/homeAdminComponent.tsx","containers/homeAdminContainer.tsx","components/header/cart.tsx","components/header/headerComponent.tsx","containers/headerContainer.tsx","redux/registration/reducer.tsx","redux/login/reducer.tsx","redux/addToCart/reducer.tsx","redux/showBooks/reducer.tsx","redux/showUsers/reducer.tsx","redux/rootReducer.ts","redux/registration/request.ts","redux/registration/sagasRegister.ts","redux/login/request.ts","redux/login/sagasLogin.ts","redux/localStorage.ts","redux/addToCart/request.ts","redux/addToCart/sagasAddToCart.ts","redux/showBooks/request.ts","redux/showBooks/sagasShowBooks.ts","redux/showUsers/request.ts","redux/showUsers/sagasShowUsers.ts","components/bookinfo/bookinfo.tsx","containers/bookInfoContainer.tsx","components/userinfo/userinfo.tsx.tsx","containers/userInfoContainer.tsx","index.tsx","redux/store.ts"],"names":["Boolean","window","location","hostname","match","LoginActions","LoginComponent","state","email","password","error","props","handle","event","setState","target","name","value","login","doLogin","console","log","this","className","message","required","type","onChange","placeholder","onClick","React","Component","prefix","data","DO_LOGIN","RegisterActions","connect","RegisterComponent","passwordComfirm","image","register","doRegister","isRegistred","to","AddToCartActions","MoveFromCartActions","DO_REGISTER","addToCart","id","ADD_TO_CART","ShowBooksActions","UpdateBookActions","AddBookActions","MoveBookActions","useStyles","makeStyles","card","maxWidth","classes","AdapterLink","forwardRef","ref","innerRef","Card","CardActionArea","component","pathname","bookInfo","title","price","img","description","bookId","CardMedia","alt","height","CardContent","Typography","style","gutterBottom","variant","color","CardActions","Button","size","HomeComponent","books","fetch","then","response","json","booksList","margin","borderTop","borderBottom","borderLeft","borderRight","width","outline","padding","minLength","debounceTimeout","map","book","toLocaleLowerCase","includes","key","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","spacing","updateBook","body","UPDATE_BOOK","useState","open","setOpen","handleClose","cursor","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Input","defaultValue","bookTitle","e","imgId","src","bookImage","bookPrice","bookAmount","bookDescription","title1","document","getElementsByClassName","children","price1","amount1","description1","file","files","undefined","alert","reader","FileReader","readAsDataURL","onload","amount","result","getBase64","setTimeout","update","addBook","ADD_BOOK","add","desc","a","b","orderBy","headRows","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","row","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","ShowUsersActions","UpdateUserActions","MoveUserActions","useToolbarStyles","root","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","text","primary","dark","spacer","flex","actions","EnhancedTableToolbar","moveFunc","Toolbar","clsx","Tooltip","IconButton","aria-label","marginTop","marginBottom","table","minWidth","tableWrapper","overflowX","clip","overflow","position","top","showBooks","Books","moveBook","MOVE_BOOK","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","removeAll","Table","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","showUsers","SHOW_USERS","users","Users","moveUser","MOVE_USER","user","isAdmin","TabPanel","other","hidden","Box","p","a11yProps","flexGrow","SimpleTabs","setValue","AppBar","Tabs","newValue","Tab","HomeAdminComponent","showB","showU","SHOW_BOOKS","moveFromCart","MOVE_FROM_CART","anchorEl","setAnchorEl","class","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","selectedBooks","MenuItem","random","quantity","reduce","SimpleMenu","Avatar","imgQQQ","my","logout","StyledBadge","withStyles","badge","right","grey","Badge","cz","badgeContent","HeaderComponent","toggleClass","x","querySelectorAll","userImage","localStorage","clear","reload","href","isLoggedIn","createElement","initialState","qantity","rootReducer","combineReducers","action","payload","request","method","headers","JSON","stringify","takeEvery","details","address","country","city","street","house","appartment","mobile","website","call","qqq","success","put","currentUser","jwt","token","decoded","succsess","loadState","serializedState","getItem","parse","err","saveState","setItem","url","selectedBook","find","localSorageBook","arr","Object","values","checkId","item","push","splice","bookS","forEach","updateUser","button","input","BookInfo","lineHeight","textDecoration","TextFields","TextField","rand","round","getModalStyle","left","transform","useStylesModal","SimpleModal1","modalStyle","userDetails","prop","keys","bottom","doAction","useStylesUserINfo","UserInfo","userinfo","email1","city1","mobile1","website1","street1","house1","appartment1","country1","titles","addr","createTitles","UPDATE_USER","store","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","persistedState","createStore","subscribe","getState","run","all","configureStore","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6113cc7e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport enum LoginActions {\n  DO_LOGIN = \"DO_LOGIN\",\n  LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\n  LOGIN_FAILED = \"LOGIN_FAILED\"\n}\n\nexport interface LoginState {\n  data: Object\n}\n\nexport interface DoLoginProps {\n  email: string;\n  password: string;\n  payloadFunc: Function;\n}\nexport interface LoginRequest {\n  data: Object\n}\n\nexport interface LoginResult {\n  token: string;\n}\n","import React from 'react'\nimport './loginComponent.css'\n\nexport class LoginComponent extends React.Component<any, any>{\n    state: any = {\n        email: \"\",\n        password: \"\",\n        error: this.props.error\n    };\n    handle = (event: any) => this.setState({ [event.target.name]: event.target.value } as any);\n    login = () => {\n        const { doLogin } = this.props;\n        doLogin({ email: this.state.email, password: this.state.password}) ;\n    }\n    // xE = this.state.email = this.props.emailToLogin\n    // xP = this.state.password = this.props.passwordToLogin\n    render(){  \n        return(\n            <div>\n                {console.log(this.props)}\n                <p>Log-in please</p>\n                <div className=\"error\">\n                    {this.props.error}\n                </div>\n                <div className=\"message\">\n                    {this.props.message}\n                </div>\n                <div className=\"log-form\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"email\"\n                        // value={this.props.emailToLogin.length !== 0 ?  this.xE : this.state.email}\n                        onChange={this.handle}\n                        placeholder=\"email\">\n                    </input>\n                    <input\n                        required\n                        type=\"password\"\n                        placeholder=\"password\"\n                        name=\"password\"\n                        // value={this.props.passwordToLogin.length !== 0 ? this.xP : this.state.password}\n                        onChange={this.handle}>\n                    </input>\n                    <button onClick={() => this.login()}>Login</button>\n                </div>\n            </div>\n        )\n    }\n    \n}\nexport default LoginComponent;","\nimport { LoginActions, LoginRequest } from \"./types\";\n\nconst prefix = \"@@login\";\n\nexport function doLogin(data: LoginRequest) {\n  return { \n    type: `${prefix}/${LoginActions.DO_LOGIN}`,\n    data };\n}\n\n","import { connect } from 'react-redux'\nimport  LoginComponent  from '../components/login/loginComponent'\nimport { RootState } from \"../redux/rootReducer\";\nimport  {doLogin} from '../redux/login/actions'\n\nconst mapStateToProps = (state: RootState) => ({\n    data: state.login.data\n});\n\nexport default connect(mapStateToProps,\n     {doLogin}\n     )(LoginComponent)\n  ","\n\nexport enum RegisterActions {\n  DO_REGISTER = \"DO_REGISTER\",\n  REGISTER_SUCCESS = \"REGISTER_SUCCESS\",\n  REGISTER_FAILED = \"REGISTER_FAILED\"\n}\n\nexport interface RegisterState {\n  login: string;\n  email: string;\n  password: string;\n  message: string;\n  isRegistred: boolean,\n  // details: object\n}\n\nexport interface DoRegisterProps {\n  email: string;\n  password: string;\n  payloadFunc: Function;\n}\nexport interface RegisterRequest {\n  login: string;\n  email: string;\n  password: string;\n}\n\nexport interface RegisterResult {\n  token: string;\n}\n","import React from 'react'\nimport '../register/registerComponent.css'\nimport { Redirect } from 'react-router';\n\nexport class RegisterComponent extends React.Component<any, any>{\n    state: any = {\n        login: \"\",\n        email: \"\",\n        password: \"\",\n        passwordComfirm: \"\",\n        image: \"\"\n    };\n    handle = (event: any) => this.setState({ [event.target.name]: event.target.value } as any);\n    register = () => {\n        const { doRegister } = this.props;\n        // this.state.login.length < 3 ? this.setState({error: 'Name should be at least 3 letters'}) :\n        //     !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.state.email) ?  this.setState({error:'Innvalid Email'}) :\n        //         (this.state.password !== this.state.passwordComfirm) ?  this.setState({error:'Passwords should match to each other'}) :\n        //             (this.state.password.length < 8) ?  this.setState({error:'Password should be at least 8 symbols'}) :\n                    doRegister({ login: this.state.login, email: this.state.email, password: this.state.password }) \n                    // && this.setState({error: ''}) ;\n    }\n    \n    render() {\n        \n        return (\n           \n            <div>\n                 {console.log(this.props)}\n                {this.props.isRegistred ? \n                    <Redirect to='/login'/> :\n                        null}\n                <p>Register please</p>\n                <div className=\"error\">\n                    {this.props.message}\n                </div>\n                <div className=\"reg-form\">\n                    \n                    <input\n                        required\n                        type=\"text\"\n                        name=\"login\"\n                        value={this.state.login}\n                        onChange={this.handle}\n                        placeholder=\"login\">\n                    </input>\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.handle}\n                        placeholder=\"email\">\n                    </input>\n                    <input\n                        required\n                        type=\"password\"\n                        placeholder=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handle}>\n                    </input>\n                    <input\n                        required\n                        type=\"password\"\n                        placeholder=\"password comfirm\"\n                        name=\"passwordComfirm\"\n                        value={this.state.passwordComfirm}\n                        onChange={this.handle}>\n                    </input>\n                    <button onClick={() => this.register()}>Login</button>\n                \n\n                </div>\n            </div>\n        )\n    }\n}","\nimport { RegisterActions, RegisterRequest } from \"./types\";\n\nconst prefix = \"@@register\";\n\nexport function doRegister(data: RegisterRequest) {\n  return { \n    type: `${prefix}/${RegisterActions.DO_REGISTER}`,\n    data };\n}\n\n","import { connect } from 'react-redux'\nimport { RegisterComponent } from '../components/register/registerComponent'\nimport { RootState } from \"../redux/rootReducer\";\nimport  {doRegister} from '../redux/registration/actions'\n\nconst mapStateToProps = (state: RootState) => ({\n    login: state.register.login,\n    email: state.register.email,\n    password: state.register.password,\n    message: state.register.message,\n    isRegistred: state.register.isRegistred,\n    // userDetails: state.register.details\n});\n\nexport default connect(mapStateToProps,\n     {doRegister}\n     )(RegisterComponent)\n  ","\n\nexport enum AddToCartActions {\n  ADD_TO_CART = \"ADD_TO_CART\",\n  ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\",\n  ADD_TO_CART_FAILED = \"ADD_TO_CART_FAILED\"\n}\n\nexport interface AddToCartState {\n  id: number,\n  selectedBooks: any[],\n  qantity: number\n}\n\nexport interface AddToCartProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface AddToCartRequest {\n  title: string;\n  price: number\n}\n\nexport interface AddToCartResult {\n  token: string;\n}\n\n\n\nexport enum MoveFromCartActions{\n  MOVE_FROM_CART = \"MOVE_FROM_CART\",\n  MOVE_FROM_CART_SUCCESS = \"MOVE_FROM_CART_SUCCESS\",\n  MOVE_FROM_CART_FAILED = \"MOVE_FROM_CART_FAILED\"\n}\n\nexport interface MoveFromCartState {\n  id: number,\n  selectedBooks: any[],\n  qantity: number\n}\n\nexport interface MoveFromCartProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface MoveFromCartRequest {\n  title: string;\n  price: number\n}\n\nexport interface MoveFromCartResult {\n  token: string;\n}\n","\nimport { AddToCartActions, MoveFromCartActions, } from \"./types\";\n\n\nexport function addToCart(id:any) {\n  return { \n    type: `${AddToCartActions.ADD_TO_CART}`,\n    id \n  };\n}\n\n\nexport function moveFromCart(id:any) {\n  return { \n    type: `${MoveFromCartActions.MOVE_FROM_CART}`,\n    id \n  };\n}\n\n","\n\nexport enum ShowBooksActions{\n  SHOW_BOOKS = \"SHOW_BOOKS\",\n  SHOW_BOOKS_SUCCESS = \"SHOW_BOOKS_SUCCESS\",\n  SHOW_BOOKS_FAILED = \"SHOW_BOOKS_FAILED\"\n}\n\nexport interface ShowBooksState {\n  Books: any[]\n}\n\nexport interface ShowBooksProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface ShowBooksRequest {\n  title: string;\n  price: number\n}\n\nexport interface ShowBooksResult {\n  token: string;\n}\n\n\nexport enum UpdateBookActions{\n  UPDATE_BOOK = \"UPDATE_BOOK\",\n  UPDATE_BOOK_SUCCESS = \"UPDATE_BOOK_SUCCESS\",\n  UPDATE_BOOK_FAILED = \"UPDATE_BOOK_FAILED\"\n}\n\nexport interface UpdateBookState {\n  Books: any[]\n}\n\nexport interface UpdateBookProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface UpdateBookRequest {\n  title: string;\n  price: number\n}\n\nexport interface UpdateBookResult {\n  token: string;\n}\n\nexport enum AddBookActions{\n  ADD_BOOK = \"ADD_BOOK\",\n  ADD_BOOK_SUCCESS = \"ADD_BOOK_SUCCESS\",\n  ADD_BOOK_FAILED = \"ADD_BOOK_FAILED\"\n}\n\nexport interface AddBookState {\n  Books: any[]\n}\n\nexport interface AddBookProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface AddBookRequest {\n  title: string;\n  price: number\n}\n\nexport interface AddBookResult {\n  token: string;\n}\n\nexport enum MoveBookActions{\n  MOVE_BOOK = \"MOVE_BOOK\",\n  MOVE_BOOK_SUCCESS = \"MOVE_BOOK_SUCCESS\",\n  MOVE_BOOK_FAILED = \"MOVE_BOOK_FAILED\"\n}\n\nexport interface MoveBookState {\n  Books: any[]\n}\n\nexport interface MoveBookProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface MoveBookRequest {\n  title: string;\n  price: number\n}\n\nexport interface MoveBookResult {\n  token: string;\n}","import React from 'react'\nimport \"./homeComponent.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { addToCart } from '../../redux/addToCart/actions';\nimport {BrowserRouter as Router, Route, Link, LinkProps} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 245,\n  },\n});\n\nconst ImgMediaCard: React.FC<any> = (props:any) => {\n  const classes = useStyles();\n const addItem = (id:any) => {\n    const { addToCart } = props;\n    addToCart( id ) ;\n}\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\n  <Link innerRef={ref as any} {...props} />\n));\n\n\n  return (\n    <Card className={`book-wrapper ${classes.card}`}>\n      <CardActionArea\n        component={AdapterLink} to={{\n          pathname: `/bookInfo`,\n          state: { bookInfo: {\n            title: props.title,\n            price: props.price,\n            image: props.img,\n            description: props.description,\n            bookId: props.id\n          } }  \n        }} \n      >\n        <CardMedia\n          component=\"img\"\n          alt={props.title}\n          height=\"140\"\n          image={props.img}\n          title={props.title}\n        />\n        <CardContent>\n\n          <Typography style={{height: \"100px\"}} gutterBottom variant=\"h5\" component=\"h2\">\n          {props.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <p>{`Price  - ${props.price}`}</p>\n      <CardActions>\n        <Button\n        onClick = {() => addItem(props.id)}\n        size=\"small\" color=\"primary\">\n          Add to cart\n        </Button>\n        \n      </CardActions>\n      \n    </Card>\n  );\n}\nexport default connect (null,{addToCart})(ImgMediaCard)","import React from 'react'\nimport \"./homeComponent.css\"\nimport ImgMediaCard from \"./imageMediaCart\"\nimport {DebounceInput} from 'react-debounce-input';\nimport  Search  from \"@material-ui/icons/Search\"\n\n\n\nexport default class HomeComponent extends React.Component <any, any> {\n    state: any = {\n        books: [],\n        value: ''\n    }\n    componentDidMount(){\n        fetch(\"http://localhost:3000/books\").then(\n            response => response.json()\n        ).then(\n            booksList => this.setState(this.state.books = booksList)\n        )\n    }\n    render(){\n        return(\n            <div>\n                <p>Try to find a book you need</p>\n                <div\n                    style={{\n                        margin: \"20px\"\n                    }}\n                >\n                    <Search/>\n                    <DebounceInput\n                        style={{\n                            borderTop: \"none\",\n                            borderBottom: \"solid 1px\",\n                            borderLeft: \"none\",\n                            borderRight: \"none\",\n                            width: \"250px\",\n                            outline: \"0\",\n                            padding: \"5px\"\n                        }}\n                        minLength={2}\n                        debounceTimeout={300}\n                        onChange={event => this.setState({value: event.target.value})} />\n                </div>\n                <div className=\"home-wrapper\">\n                    {this.state.books.map(\n                        (book: any) => {\n                            if(book.title.toLocaleLowerCase().includes(this.state.value.toLocaleLowerCase()) ) {\n                                return <ImgMediaCard\n                                key = {book.id}\n                                description = {book.description}\n                                title = {book.title}\n                                img = {book.img}\n                                price = {`${book.price} USD`}\n                                id = {book.id}\n                            >\n                            </ImgMediaCard>\n                            }\n                             \n                        }\n                    )}\n                </div>\n            </div>\n        )\n    }\n    \n}\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport \"./homeAdminComponent.css\"\r\nimport { connect } from 'react-redux';\r\nimport { updateBook } from '../../redux/showBooks/actions'\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nconst TransitionsModalEdit: React.FC<any> = props =>  {\r\n    \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\nlet update = (id:number) => {\r\n    let title1 = document.getElementsByClassName(`title${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let price1 = document.getElementsByClassName(`price${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let amount1 = document.getElementsByClassName(`amount${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let description1 = document.getElementsByClassName(`description${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let image1 = document.getElementsByClassName(`image${props.bookId}`)[0].children[0] as any\r\n    let file:any = image1.files [0] \r\n    if(file !== undefined){\r\n      let getBase64 = (file:any) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file); \r\n        reader.onload = function () {\r\n          let body = {\r\n            title: title1.value,  \r\n            price: +price1.value,\r\n            amount: amount1.value,\r\n            description: description1.value,\r\n            img: reader.result \r\n          }\r\n        const { updateBook } = props;\r\n        updateBook(id, body)\r\n        };\r\n      }\r\n     getBase64(file) \r\n     setTimeout((e) => handleClose(),1000)\r\n    }else{\r\n     return alert('You forgot to update image')\r\n    }\r\n     \r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        type=\"button\" \r\n        onClick={handleOpen}\r\n        style={{\r\n          padding: \"0\",\r\n          border: \"none\",\r\n          backgroundColor: \"transparent\",\r\n          cursor: \"pointer\"\r\n        }}\r\n        >\r\n        <Edit/>\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div id=\"modal-edit\" className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">{`Edit Book ID-${props.bookId}`}</h2>\r\n            <p id=\"transition-modal-description\">Change data then press \"Submit\"</p>\r\n            <div className='inputs-whapper'>\r\n                <label>Title</label>\r\n                <Input className={`title${props.bookId}`} type=\"text\" defaultValue={props.bookTitle}></Input >\r\n                <label>Image</label>\r\n                <img \r\n                    className=\"smallImg\"\r\n                    onClick={(e:any) => e.target.className === \"smallImg\" ? e.target.className=\"bigImg\" : e.target.className=\"smallImg\"}\r\n                    id={`book-img${props.imgId}`}\r\n                    src={props.bookImage} \r\n                />\r\n                <Input className={`image${props.bookId}`}  type=\"file\"></Input>\r\n                <label>Price</label>\r\n                <Input className={`price${props.bookId}`} type=\"text\" defaultValue={props.bookPrice}></Input>\r\n                <label>Amount</label>\r\n                <Input className={`amount${props.bookId}`} type=\"text\" defaultValue={props.bookAmount}></Input>\r\n            </div>\r\n            <label>Description</label>\r\n            <Input className={`description${props.bookId} description`} type=\"text\" defaultValue={props.bookDescription}></Input>\r\n            <div> \r\n              <button\r\n                onClick={\r\n                    (e:any) => update(props.bookId)\r\n                }\r\n              >Submit</button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default connect(null, { updateBook })(TransitionsModalEdit)","\nimport { ShowBooksActions, UpdateBookActions, AddBookActions, MoveBookActions } from \"./types\";\n\n\n\nexport function showBooks() {\n  return { \n    type: `${ShowBooksActions.SHOW_BOOKS}`\n  };\n}\nexport function updateBook(id:number, body:object) {\n  return { \n    type: `${UpdateBookActions.UPDATE_BOOK}`,\n    id,\n    body\n  };\n}\nexport function addBook( body:object) {\n  return { \n    type: `${AddBookActions.ADD_BOOK}`,\n    body\n  };\n}\nexport function moveBook( body:object) {\n  return { \n    type: `${MoveBookActions.MOVE_BOOK}`,\n    body\n  };\n}\n\n\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Add from \"@material-ui/icons/Add\"\r\nimport \"./homeAdminComponent.css\"\r\nimport { connect } from 'react-redux';\r\nimport { addBook } from '../../redux/showBooks/actions'\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nconst TransitionsModalAdd: React.FC<any> = props =>  {\r\n    \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\nlet add = () => {\r\n    let title1 = document.getElementsByClassName(`title${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let price1 = document.getElementsByClassName(`price${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let amount1 = document.getElementsByClassName(`amount${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let description1 = document.getElementsByClassName(`description${props.bookId}`)[0].children[0] as HTMLInputElement\r\n    let image1 = document.getElementsByClassName(`image${props.bookId}`)[0].children[0] as any\r\n    let file:any = image1.files [0] \r\n    function getBase64(file:any) {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(file); \r\n      reader.onload = function () {\r\n        let body = {\r\n          title: title1.value,  \r\n          price: +price1.value,\r\n          amount: amount1.value,\r\n          description: description1.value,\r\n          img: reader.result\r\n        }\r\n      const { addBook } = props;\r\n      addBook( body)\r\n      };\r\n    }\r\n   getBase64(file)\r\n   setTimeout((e) => handleClose(),1000)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        type=\"button\" \r\n        onClick={handleOpen}\r\n        style={{\r\n          padding: \"25px\",\r\n          border: \"none\",\r\n          backgroundColor: \"transparent\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >Add new Book\r\n      <Add\r\n      style={{\r\n        display: \"block\",\r\n        margin: \"0 auto\"}}\r\n      />\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div id=\"modal-edit\" className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">{`Add new Book`}</h2>\r\n            <p id=\"transition-modal-description\">Fill the data then press \"Submit\"</p>\r\n            <div className='inputs-whapper'>\r\n                <label>Title</label>\r\n                <Input className={`title${props.bookId}`} type=\"text\"></Input >\r\n                <label>Image</label>\r\n                <img \r\n                    className=\"smallImg\"\r\n                    onClick={(e:any) => e.target.className === \"smallImg\" ? e.target.className=\"bigImg\" : e.target.className=\"smallImg\"}\r\n                    src={props.bookImage} \r\n                />\r\n                <Input className={`image${props.bookId}`} type=\"file\"></Input>\r\n                <label>Price</label>\r\n                <Input className={`price${props.bookId}`} type=\"text\"></Input>\r\n                <label>Amount</label>\r\n                <Input className={`amount${props.bookId}`} type=\"text\"></Input>\r\n            </div>\r\n            <label>Description</label>\r\n            <Input className={`description${props.bookId} description`} type=\"text\" ></Input>\r\n            <div> \r\n              <button\r\n                onClick={\r\n                    (e:any) => add()\r\n                }\r\n              >Submit</button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default connect(null, { addBook })(TransitionsModalAdd)","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { moveBook } from '../../redux/showBooks/actions'\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../../redux/rootReducer';\r\nimport TransitionsModalEdit from  \"./modalEditComponent\"\r\nimport TransitionsModalAdd from  \"./modalAddComponent\"\r\n\r\n\r\ninterface Data {\r\n    title: string,\r\n    amount: number,\r\n    price: number,\r\n    description: string\r\n  }\r\n  \r\n  function desc<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  function stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = cmp(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n  }\r\n  type Order = 'asc' | 'desc';\r\n  function getSorting<K extends keyof any>(\r\n    order: Order,\r\n    orderBy: K,\r\n  ): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n  }\r\n  interface HeadRow {\r\n    disablePadding: boolean;\r\n    id: keyof Data;\r\n    label: string;\r\n    numeric: boolean;\r\n  }\r\n  const headRows: HeadRow[] = [\r\n    { id: 'title', numeric: false, disablePadding: true, label: 'Book Title' },\r\n    { id: 'amount', numeric: true, disablePadding: false, label: 'Pieces' },\r\n    { id: 'price', numeric: true, disablePadding: false, label: 'Usd' }\r\n  ];\r\n  interface EnhancedTableProps {\r\n    classes: ReturnType<typeof useStyles>;\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n  }\r\n  function EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell>\r\n          {headRows.map(row => (\r\n            <TableCell\r\n              key={row.id}\r\n              align={row.numeric ? 'right' : 'left'}\r\n              padding={row.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === row.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === row.id}\r\n                direction={order}\r\n                onClick={createSortHandler(row.id)}\r\n              >\r\n                {row.label}\r\n                {orderBy === row.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n  \r\n  const useToolbarStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n      },\r\n      highlight:\r\n        theme.palette.type === 'light'\r\n          ? {\r\n              color: theme.palette.secondary.main,\r\n              backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n          : {\r\n              color: theme.palette.text.primary,\r\n              backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n      spacer: {\r\n        flex: '1 1 100%',\r\n      },\r\n      actions: {\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      title: {\r\n        flex: '0 0 auto',\r\n      },\r\n    }),\r\n  );\r\n  \r\n  const EnhancedTableToolbar = (props: any) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, moveFunc } = props;\r\n  \r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        <div className={classes.title}>\r\n          {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"subtitle1\">\r\n              {numSelected} selected\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n              Full list of Books\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <div className={classes.spacer} />\r\n        <div className={classes.actions}>\r\n          {numSelected > 0 ? (\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton \r\n              onClick={(e) => moveFunc()}\r\n              aria-label=\"delete\">\r\n                <DeleteIcon/>\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  \r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n      tableWrapper: {\r\n        overflowX: 'auto',\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n    }),\r\n  );\r\n  \r\n\r\n  const  EnhancedTableBooks: React.FC = (props:any) =>  {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('amount');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n\r\n    let books:any = props.books\r\n    \r\n    \r\n    function handleRequestSort(event: React.MouseEvent<unknown>, property: keyof Data) {\r\n      const isDesc = orderBy === property && order === 'desc';\r\n      setOrder(isDesc ? 'asc' : 'desc');\r\n      setOrderBy(property);\r\n    }\r\n  \r\n    function handleSelectAllClick(event: React.ChangeEvent<HTMLInputElement>) {\r\n      if (event.target.checked) {\r\n        const newSelecteds = books.map((n:any) => n.title);\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    }\r\n  \r\n    function handleClick(event: React.MouseEvent<unknown>, name: string) {\r\n      const selectedIndex = selected.indexOf(name);\r\n      let newSelected: string[] = [];\r\n  \r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, name);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n      setSelected(newSelected);\r\n    }\r\n  \r\n    function handleChangePage(event: unknown, newPage: number) {\r\n      setPage(newPage);\r\n    }\r\n  \r\n    function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    }\r\n  \r\n    function handleChangeDense(event: React.ChangeEvent<HTMLInputElement>) {\r\n      setDense(event.target.checked);\r\n    }\r\n  \r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, books.length - page * rowsPerPage);\r\n  \r\n    function move(){\r\n      let body = selected\r\n      const { moveBook } = props;\r\n      moveBook(body) \r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar \r\n          moveFunc={move}\r\n          removeAll={books.length}\r\n          numSelected={selected.length} />\r\n          <div className={classes.tableWrapper}>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? 'small' : 'medium'}\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={books.length}\r\n              />\r\n              \r\n              <TableBody>\r\n                {stableSort(books, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row:any, index) => {\r\n                    const isItemSelected = isSelected(row.title);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow\r\n                        id={row.id}\r\n                        hover\r\n                        \r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.title+row.id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={event => handleClick(event, row.title)}\r\n                            checked={isItemSelected} id={`${row.id}-bookRow`}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                          {row.title}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.amount}</TableCell>\r\n                        <TableCell align=\"right\">{row.price}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <TransitionsModalEdit\r\n                            imgId={row.id}\r\n                            bookId={row.id}\r\n                            bookTitle={row.title}\r\n                            bookImage={row.img}\r\n                            bookDescription={row.description}\r\n                            bookPrice={row.price}\r\n                            bookAmount={row.amount}\r\n                          />\r\n                        </TableCell>\r\n                        \r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 49 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={books.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              'aria-label': 'previous page',\r\n            }}\r\n            nextIconButtonProps={{\r\n              'aria-label': 'next page',\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <TransitionsModalAdd/>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  const mapStateToProps = (state: RootState) => ({\r\n    books: state.showBooks.Books\r\n});\r\n  \r\n  export default connect(mapStateToProps,{moveBook})(EnhancedTableBooks)\r\n","\n\n\nexport enum ShowUsersActions{\n  SHOW_USERS = \"SHOW_USERS\",\n  SHOW_USERS_SUCCESS = \"SHOW_USERS_SUCCESS\",\n  SHOW_USERS_FAILED = \"SHOW_USERS_FAILED\"\n}\n\nexport interface ShowUsersState {\n  Users: any[]\n}\n\nexport interface ShowUsersProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface ShowUsersRequest {\n  title: string;\n  price: number\n}\n\nexport interface ShowUsersResult {\n  token: string;\n}\n\n\nexport enum UpdateUserActions{\n  UPDATE_USER = \"UPDATE_USER\",\n  UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\",\n  UPDATE_USER_FAILED = \"UPDATE_USER_FAILED\"\n}\n\nexport interface UpdateUserState {\n  Users: any[]\n}\n\nexport interface UpdateUserProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface UpdateUserRequest {\n  title: string;\n  price: number\n}\n\nexport interface UpdateUserResult {\n  token: string;\n}\n\n\n\nexport enum MoveUserActions{\n  MOVE_USER = \"MOVE_USER\",\n  MOVE_USER_SUCCESS = \"MOVE_USER_SUCCESS\",\n  MOVE_USER_FAILED = \"MOVE_USER_FAILED\"\n}\n\nexport interface MoveUserState {\n  Users: any[]\n}\n\nexport interface MoveUserProps {\n  title: string;\n  price: number\n  payloadFunc: Function;\n}\nexport interface MoveUserRequest {\n  title: string;\n  price: number\n}\n\nexport interface MoveUserResult {\n  token: string;\n}","\nimport { ShowUsersActions, MoveUserActions, UpdateUserActions } from \"./types\";\n\n\n\n\nexport function showUsers() {\n  return { \n    type: `${ShowUsersActions.SHOW_USERS}`\n  };\n}\nexport function updateUser(id:number, body:object) {\n  return { \n    type: `${UpdateUserActions.UPDATE_USER}`,\n    id,\n    body\n  };\n}\nexport function moveUser( body:object) {\n  return { \n    type: `${MoveUserActions.MOVE_USER}`,\n    body\n  };\n}\n\n\n","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from \"react-redux\"\r\nimport { showUsers, moveUser } from \"../../redux/showUsers/actions\"\r\nimport { RootState } from '../../redux/rootReducer';\r\nimport Delete from \"@material-ui/icons/Delete\"\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }),\r\n);\r\n\r\n \r\nconst SimpleTableUsers:React.FC = (props:any) =>  {\r\n  const classes = useStyles();\r\n  let users:any = props.users\r\n  let moveU = (id:number) => {\r\n        const { moveUser } = props;\r\n        moveUser(id)\r\n}\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Remove</TableCell>\r\n            <TableCell>User Avatar</TableCell>\r\n            <TableCell >User Email</TableCell>\r\n            <TableCell align=\"right\">User Login</TableCell>\r\n            <TableCell align=\"right\">Admin</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((user:any) => (\r\n            <TableRow key={`${user.login}${user.id}`}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {!user.isAdmin ? \r\n                <Delete\r\n                  style={{cursor: \"pointer\"}}\r\n                  onClick={(e:any) => moveU(user.id)}\r\n                /> : null}\r\n                \r\n              </TableCell>\r\n              <TableCell>\r\n                <img style={{maxWidth:\"35px\"}} src={user.img} alt={`${user.login}image`}/>\r\n              </TableCell>\r\n              <TableCell >{user.email}</TableCell>\r\n              <TableCell >{user.login}</TableCell>\r\n              <TableCell align=\"right\">{user.isAdmin ? \"yes\" : \"no\"}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\nconst mapStateToProps = (state: RootState) => ({\r\n  users: state.showUsers.Users\r\n});\r\n\r\nexport default connect(mapStateToProps,{showUsers, moveUser})(SimpleTableUsers)","import React from 'react'\r\nimport \"./homeAdminComponent.css\"\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport EnhancedTableBooks from \"./tableBooks\"\r\nimport SimpleTableUsers from \"./tableUsers\"\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }),\r\n);\r\n\r\nconst SimpleTabs: React.FC<any> = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Books\" {...a11yProps(0)} />\r\n          <Tab label=\"Users\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      {props.books}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n      {props.users}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default class HomeAdminComponent extends React.Component <any, any> {\r\n    state: any = {\r\n        books: []\r\n    }\r\n    showB = () => {\r\n      const { showBooks } = this.props;\r\n      showBooks() ;\r\n  }\r\n  showU = () => {\r\n    const { showUsers } = this.props;\r\n    showUsers() ;\r\n}\r\n    componentDidMount(){\r\n      this.showB()\r\n      this.showU()\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p>Here suppose to be main information</p>\r\n                <SimpleTabs\r\n                    books={<EnhancedTableBooks/>}\r\n                    users={<SimpleTableUsers/>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n","import { connect } from 'react-redux'\r\nimport  HomeAdminComponent  from '../components/homeAdmin/homeAdminComponent'\r\nimport { RootState } from \"../redux/rootReducer\";\r\nimport { showBooks } from \"../redux/showBooks/actions\"\r\nimport { showUsers } from \"../redux/showUsers/actions\"\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    books: state.showBooks.Books,\r\n    users: state.showUsers.Users\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,{showBooks, showUsers})(HomeAdminComponent)","import React from 'react'\nimport '../header/headerComponent.css'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../redux/rootReducer';\nimport { addToCart, moveFromCart } from '../../redux/addToCart/actions';\n\n\n\n\n\nconst SimpleMenuCart: React.FC<any> = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    function handleClick(event: React.MouseEvent<HTMLButtonElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n    function handleClose() {\n        setAnchorEl(null);\n    }\n    let totalPrice = () => props.bookId.selectedBooks.reduce(\n            (a: any, b: any) => {\n                return a + b.price * b.quantity\n            },0\n        )\n        const addItem = (id:any) => {\n            const { addToCart } = props;\n            addToCart( id ) ;\n        }\n        const moveItem = (id:any) => {\n            const { moveFromCart } = props;\n            moveFromCart( id ) ;\n        }\n        \n    return (\n        <div className={props.class}>\n            <div aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={(e:any) => handleClick(e)}>\n                {props.user}\n            </div>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.bookId.selectedBooks.map((book: any) => {\n                    return <MenuItem \n                    className='cart-item'\n                    key={`${Math.random()}-key`}\n                    >{\n                        <div \n                        id={book.id}\n                        className=\"cart-item-wrapper\">\n                            <button \n                                onClick = {(e: any) => moveItem(book.id)}\n                                id = {`${book.id}iD`}\n                                className=\"dec\">-\n                            </button>\n                            <p>{` ${book.title}: ${book.price}usd (${book.quantity})`}</p>\n                            <button \n                                onClick = {(e: any) => addItem(book.id)}\n                                id = {`${book.id}id`}\n                                className=\"inc\">+\n                            </button>\n                        </div>\n                    }\n                    </MenuItem>\n                })}\n                {<p className=\"total\">Total price: {totalPrice()} $usd</p>}\n                \n            </Menu>\n        </div>\n    );\n}\nconst mapStateToProps = (state: RootState) => ({\n    bookId: state.addToCart\n});\nexport default connect(mapStateToProps,{addToCart, moveFromCart})(SimpleMenuCart)","import React from 'react'\nimport '../header/headerComponent.css'\nimport { BrowserRouter as Router, Redirect, Link, LinkProps } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SimpleMenuCart from './cart'\nimport { RootState } from '../../redux/rootReducer';\nimport { connect } from 'react-redux'\nimport { Avatar } from \"@material-ui/core\"\n\nconst SimpleMenu: React.FC<any> = (props:any) => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    function handleClick(event: React.MouseEvent<HTMLButtonElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n    const AdapterLink = React.forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\n        <Link innerRef={ref as any} {...props} />\n      ));\n    \n    return (\n        <div className={props.class}>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                {props.user}\n                <Avatar\n                    src={props.imgQQQ} alt=\"user-image\"\n                />\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem \n                component={AdapterLink} to='/userInfo'\n                 \n                onClick={handleClose}>{props.my}</MenuItem>\n                <MenuItem onClick={handleClose}>{props.logout}</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nconst StyledBadge = withStyles((theme: Theme) => ({\n    badge: {\n      top: '50%',\n      right: -3,\n      border: `2px solid ${\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900]\n      }`,\n    },\n  }))(Badge);\n\n  const ms = (state: RootState) => ({\n    addToCart: state.addToCart\n}); \n\nconst CustomizedBadges:React.FC<any> = (props:any) => {\n        const count = props.addToCart.selectedBooks.reduce((a:any, b:any) => {\n            return a + b.quantity\n        },0)\n        return(\n            <IconButton\n            aria-label=\"cart\">\n              <StyledBadge badgeContent={count} color=\"primary\">\n                <ShoppingCartIcon />\n              </StyledBadge>\n            </IconButton>\n          );\n    }\n    const cz = connect(ms)(CustomizedBadges)\n    \n\n\nexport default class HeaderComponent extends React.Component<any, any>{\n    state: any = {\n        email: \"\"\n    };\n    toggleClass = ((e: any) => {\n        let x: any = document.querySelectorAll('.link')\n        for (let item of x) {\n            item.className = \"link\"\n        }\n        e.target.className = \"link active\"\n    })\n    \n    render() {\n       return (\n            <div>\n                <div>\n                    {\n                        this.props.isAdmin ? \n                            (<div className=\"header-wrapper\">\n                                <div onClick={(e) => this.toggleClass(e)} className='link'><Link to=\"home-admin\">Home Admin</Link></div>\n                                <SimpleMenu \n                                    imgQQQ={this.props.userImage}\n                                    class=\"welcome\"\n                                    my = 'My Account'\n                                    user={<div className=\"logout\">{`Welcome ${this.props.email}`}</div>}\n                                    logout={<div className=\"logout\" onClick={() => {localStorage.clear(); window.location.reload(); window.location.href = \"/login\"}}>Logout</div>}\n                                ></SimpleMenu>\n                                <Redirect to=\"/home-admin\" />\n                            </div>) :\n                        this.props.isLoggedIn ?\n                            (<div className=\"header-wrapper\">\n                                <div onClick={(e) => this.toggleClass(e)} className='link'><Link to=\"home\">Home</Link></div>\n                                <SimpleMenuCart \n                                    class=\"cart\"\n                                    user = { React.createElement(cz, {})}\n                                ></SimpleMenuCart>\n                                <SimpleMenu \n                                    imgQQQ={this.props.userImage}\n                                    class=\"welcome\"\n                                    my = 'My Account'\n                                    user={`Welcome ${this.props.email}`}\n                                    logout={<div className=\"logout\" onClick={() => {localStorage.clear(); window.location.reload(); window.location.href = \"/login\"}}>Logout</div>}\n                                ></SimpleMenu>\n                                <Redirect to=\"/home\" />\n                            </div>) :\n                            (<div className=\"header-wrapper\">\n                                <li onClick={(e) => this.toggleClass(e)} className='link' key='register-link'><Link to=\"register\">Register</Link></li>\n                                <li onClick={(e) => this.toggleClass(e)} className='link' key='login-link'><Link to=\"login\">Log In</Link></li>\n                            </div>)\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n","import { connect } from 'react-redux'\nimport  HeaderComponent  from '../components/header/headerComponent'\nimport { RootState } from \"../redux/rootReducer\";\n\n\nconst mapStateToProps = (state: RootState) => ({\n    data: state.login.data,\n    bookId: state.addToCart.id,\n    \n});\n\nexport default connect(mapStateToProps)(HeaderComponent)\n  ","import { RootState } from \"../rootReducer\";\nimport { RegisterState } from \"./types\";\n\nexport const initialState: RegisterState = {\n  login: \"\",\n  email: \"\",\n  password: \"\",\n  message: \"\",\n  isRegistred: false,\n  // details: {},\n};\n\nexport function registerReducer(state: RegisterState = initialState, action: any) {\n  switch (action.type) {\n    case `@@register/DO_REGISTER`: {\n      return {\n        ...state,\n      };\n    }\n    case `@@register/REGISTER_FAILED`: {\n      const { message} = action.payload;\n      return {\n        ...state,\n        message\n      };\n    }\n\n    case `@@register/REGISTER_SUCCESS`: {\n      const { email, password, message } = action.payload;\n      return {\n        ...state,\n        isRegistred: true,\n        email: email,\n        password: password,\n        message: message\n        // details: userDetails\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const register = (state: RootState) => state.register;\n","import { RootState } from \"../rootReducer\";\nimport { LoginState } from \"./types\";\nimport { any } from \"prop-types\";\n\nexport const initialState: LoginState = {\n  data: {}\n};\n\nexport function loginReducer(state: LoginState = initialState, action: any) {\n  switch (action.type) {\n    case `@@login/DO_LOGIN`: {\n      return {\n        ...state,\n      };\n    }\n    case `@@login/LOGIN_FAILED`: {\n      const { error} = action.payload;\n      return {\n        ...state,\n        error\n      };\n    }\n\n    case `@@login/LOGIN_SUCCESS`: {\n      const { data } = action.payload;\n      return {\n        ...state,\n        data: data,\n        isLoggedIn: true\n      };\n    }\n\n    \n\n    default:\n      return state;\n  }\n}\n\nexport const login = (state: RootState) => state.login;\n","import { RootState } from \"../rootReducer\";\nimport { AddToCartState } from \"./types\";\n\nexport const initialState: AddToCartState = {\n  id: 0,\n  selectedBooks: [],\n  qantity: 1,\n};\n\nexport function addToCartReducer(state: AddToCartState = initialState, action: any) {\n  switch (action.type) {\n    case `ADD_TO_CART`: {\n      return {\n        ...state,\n        id: state.id,\n      };\n    }\n    case `ADD_TO_CART_FAILED`: {\n      const {body} = action.payload;\n      return {\n        ...state,\n        body\n      };\n    }\n    \n\n    case `ADD_TO_CART_SUCCESS`: {\n      const { id, selectedBooks, qantity } = action.payload;\n      return {\n        ...state,\n        id: id,\n        selectedBooks: selectedBooks,\n        qantity: qantity\n      };\n    }\n\n    \n    case `MOVE_FROM_CART`: {\n      return {\n        ...state,\n        id: state.id\n      }\n    }\n\n    case `MOVE_FROM_CART_FAILED`: {\n      const {body} = action.payload;\n      return {\n        ...state,\n        body\n      };\n    }\n    \n\n    case `MOVE_FROM_CART_SUCCESS`: {\n      const { id, selectedBooks, qantity  } = action.payload;\n      return {\n        ...state,\n        id: id,\n        selectedBooks: selectedBooks,\n        qantity: qantity\n      };\n    }\n\n\n    default:\n      return state;\n  }\n}\n\nexport const addToCart = (state: RootState) => state.addToCart;\n","import { RootState } from \"../rootReducer\";\nimport { ShowBooksState } from \"./types\";\n\nexport const initialState: ShowBooksState = {\n  Books: []\n};\n\nexport function showBooksReducer(state: ShowBooksState = initialState, action: any) {\n  switch (action.type) {\n    \n    case `SHOW_BOOKS`: {\n      return {\n        ...state\n      }\n    }\n\n    case `SHOW_BOOKS_FAILED`: {\n      const {books} = action.payload;\n      return {\n        ...state,\n        books\n      };\n    }\n    \n\n    case `SHOW_BOOKS_SUCCESS`: {\n      const { books } = action.payload;\n      return {\n        ...state,\n        Books: books\n      };\n    }\n\n    case `UPDATE_BOOK`: {\n      return {\n        ...state\n      }\n    }\n\n    case `UPDATE_BOOK_FAILED`: {\n      const {books} = action.payload;\n      return {\n        ...state,\n        books\n      };\n    }\n    \n\n    case `UPDATE_BOOK_SUCCESS`: {\n      const { books } = action.payload;\n      return {\n        ...state,\n        Books: books\n      };\n    }\n\n    case `ADD_BOOK`: {\n      return {\n        ...state\n      }\n    }\n\n    case `ADD_BOOK_FAILED`: {\n      const {books} = action.payload;\n      return {\n        ...state,\n        books\n      };\n    }\n    \n\n    case `ADD_BOOK_SUCCESS`: {\n      const { books } = action.payload;\n      return {\n        ...state,\n        Books: books\n      };\n    }\n\n    case `MOVE_BOOK`: {\n      return {\n        ...state\n      }\n    }\n\n    case `MOVE_BOOK_FAILED`: {\n      const {} = action.payload;\n      return {\n        ...state,\n    \n      };\n    }\n    \n\n    case `MOVE_BOOK_SUCCESS`: {\n      const { books } = action.payload;\n      return {\n        ...state,\n        Books: books\n      };\n    }\n\n\n    default:\n      return state;\n  }\n}\n\nexport const showBooks = (state: RootState) => state.showBooks;\n","import { RootState } from \"../rootReducer\";\nimport { ShowUsersState } from \"./types\";\n\nexport const initialState: ShowUsersState = {\n  Users: []\n};\n\nexport function showUsersReducer(state: ShowUsersState = initialState, action: any) {\n  switch (action.type) {\n    \n    case `SHOW_USERS`: {\n      return {\n        ...state\n      }\n    }\n\n    case `SHOW_USERS_FAILED`: {\n      const {users} = action.payload;\n      return {\n        ...state,\n        users\n      };\n    }\n    \n\n    case `SHOW_USERS_SUCCESS`: {\n      const { users } = action.payload;\n      return {\n        ...state,\n        Users: users\n      };\n    }\n\n\n    case `UPDATE_USER`: {\n      return {\n        ...state\n      }\n    }\n\n    case `UPDATE_USER_FAILED`: {\n      const {users} = action.payload;\n      return {\n        ...state,\n        users\n      };\n    }\n    \n\n    case `UPDATE_USER_SUCCESS`: {\n      const { users } = action.payload;\n      return {\n        ...state,\n        Users: users\n      };\n    }\n\n    \n\n    case `MOVE_USER`: {\n      return {\n        ...state\n      }\n    }\n\n    case `MOVE_USER_FAILED`: {\n      const {users} = action.payload;\n      return {\n        ...state,\n        users\n      };\n    }\n    \n\n    case `MOVE_USER_SUCCESS`: {\n      const { users } = action.payload;\n      return {\n        ...state,\n        Users: users\n      };\n    }\n\n\n    default:\n      return state;\n  }\n}\n\nexport const showUsers = (state: RootState) => state.showUsers;\n","import { Reducer, combineReducers } from \"redux\";\nimport { RegisterState } from \"./registration/types\";\nimport { registerReducer } from \"./registration/reducer\";\nimport { loginReducer } from \"./login/reducer\";\nimport { LoginState } from \"./login/types\";\nimport { AddToCartState } from \"./addToCart/types\";\nimport { addToCartReducer } from \"./addToCart/reducer\";\nimport { ShowBooksState } from \"./showBooks/types\";\nimport { showBooksReducer } from \"./showBooks/reducer\"\nimport { ShowUsersState } from \"./showUsers/types\";\nimport { showUsersReducer } from \"./showUsers/reducer\";\n\nexport interface RootState {\n  register: RegisterState;\n  login: LoginState;\n  addToCart: AddToCartState;\n  showBooks: ShowBooksState;\n  showUsers: ShowUsersState\n}\n\nconst rootReducer: Reducer<RootState> = combineReducers<RootState>({\n  register: registerReducer,\n  login: loginReducer,\n  addToCart: addToCartReducer,\n  showBooks: showBooksReducer,\n  showUsers: showUsersReducer,\n});\n\nexport default rootReducer;\n","export default function request( method: string, body?: object) {\n    return (fetch('http://localhost:3200/v1/register', {\n        method: method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    }).then(response => response.json())\n    );\n}","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport request from './request'\n\n\nexport function* doRegister(): IterableIterator<any> {\n  yield takeEvery(`@@register/DO_REGISTER`, function*(action: any) {\n    try {\n\n    const {\n      data: { login, email, password }\n    } = action;\n    let user = {\n      img: \"https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1\",  \n          login: login,\n          email: email,\n          password: password,\n          isAdmin: false,\n          details: {\n              email: email,\n              address: {\n                  country: \"No data yet\",\n                  city: \"No data yet\",\n                  street: \"No data yet\",\n                  house: \"No data yet\",\n                  appartment: \"No data yet\"\n              },\n              mobile:\"No data yet\",\n              website: \"No data yet\"\n          }\n    }\n    let qqq = yield call(request, \"POST\", user)\n    \n        if(qqq.success){\n          yield put({\n            type: `@@register/REGISTER_SUCCESS`,\n            payload: {\n              email: user.email,\n              password: user.password,\n              isRegistred: true,\n              message: qqq.message\n            }\n          });\n        }\n        else{\n          yield put({\n            type: `@@register/REGISTER_FAILED`,\n            payload: {\n              message: qqq.message\n            }\n          });\n        }\n        \n      \n      \n\n    } catch (error) {\n      yield put({\n        type: `@@register/REGISTER_FAILED`,\n      });\n      \n      \n    }\n  });\n}\n","export default function request( method: string, body?: object) {\n    return (fetch('http://localhost:3200/v1/auth', {\n        method: method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    }).then(response => response.json())\n    );\n}","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport request from './request'\nimport * as jwt from \"jwt-then\";\n\n\nexport function* doLogin(): IterableIterator<any> {\n  yield takeEvery(`@@login/DO_LOGIN`, function*(action: any) {\n    try {\n     \n      const currentUser = yield call(request, 'POST', action.data);\n\n      const decoded: any = yield call(jwt.verify, currentUser.token, \"secret\");\n\n      console.log(decoded)\n       if( currentUser.succsess ){\n        \n        yield put({\n          type: `@@login/LOGIN_SUCCESS`,\n          payload: {\n            data: \"decoded\"\n          }\n        });\n      }else{\n        yield put({\n          type: `@@login/LOGIN_FAILED`,\n          payload: {\n            error: currentUser.message\n          }\n        });\n      }\n    \n    } catch (error) {\n      yield put({\n        type: `@@login/LOGIN_FAILED`,\n        // payload: {\n        //   error: error.message\n        // }\n      });\n    }\n  });\n}\n","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('state');\n      if (serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  }; \n  export const saveState = (state:any) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('state', serializedState);\n    } catch {\n    }\n  };","export default function request( method: string, url: string, body?: object) {\n    return (fetch(`http://localhost:3000/${url}`, {\n        method: method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    }).then(response => response.json())\n    );\n}","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport request from './request'\n\n\nexport function* addToCart(): IterableIterator<any> {\n  yield takeEvery(`ADD_TO_CART`, function*(action: any) {\n    try {\n    const id = action.id\n      let books = yield call(request, 'GET', 'books')\n      let selectedBook = books.find((book: any) => book.id === id)\n      let quantity = 1\n      selectedBook.quantity = quantity\n      let localSorageBook = JSON.parse(localStorage.getItem(\"state\") as any).addToCart.selectedBooks\n      let arr = Object.values(localSorageBook)\n      let checkId :any = arr.find((item:any) => item.id === selectedBook.id)\n      \n      if(checkId){\n        checkId.quantity += 1\n      }\n     else{\n      arr.push(selectedBook)\n     }\n     \n    yield put({\n      type: `ADD_TO_CART_SUCCESS`,\n      payload: {\n        selectedBooks: arr,\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `ADD_TO_CART_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\nexport function* moveFromCart(): IterableIterator<any> {\n  yield takeEvery(`MOVE_FROM_CART`, function*(action: any) {\n    try {\n    const id = action.id\n      let arr = Object.values(JSON.parse(localStorage.getItem(\"state\") as any).addToCart.selectedBooks)\n      let checkId :any = (arr.find((item:any) => item.id === id))\n      if(checkId.quantity > 1){\n        checkId.quantity -= 1\n      }else{\n        arr.splice(arr.indexOf(checkId),1)\n      }\n      \n    yield put({\n      type: `MOVE_FROM_CART_SUCCESS`,\n      payload: {\n        selectedBooks: arr,\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `MOVE_FROM_CART_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\n","export default function request( method: string, url: string, body?: object) {\n    return (fetch(`http://localhost:3000/${url}`, {\n        method: method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    }).then(response => response.json())\n    );\n}","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport request from './request'\nimport { async } from \"q\";\n\nexport function* showBooks(): IterableIterator<any> {\n  yield takeEvery(`SHOW_BOOKS`, function*(action: any) {\n    try {\n      \n      let books = yield call(request, 'GET', 'books')\n    \n    yield put({\n      type: `SHOW_BOOKS_SUCCESS`,\n      payload: {\n        books\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `SHOW_BOOKS_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\nexport function* updateBook(): IterableIterator<any> {\n  yield takeEvery(`UPDATE_BOOK`, function*(action: any) {\n    try {\n      const { id, body } = action\n      \n      yield call(request, \"PUT\", `books/${id}`, body)\n\n      let books = yield call(request, 'GET', 'books')\n    yield put({\n      type: `UPDATE_BOOK_SUCCESS`,\n      payload: {\n        books\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `UPDATE_BOOK_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\nexport function* addBook(): IterableIterator<any> {\n  yield takeEvery(`ADD_BOOK`, function*(action: any) {\n    try {\n      const { body } = action\n      \n      yield call(request, \"POST\", 'books', body)\n\n      let books = yield call(request, 'GET', 'books')\n    yield put({\n      type: `ADD_BOOK_SUCCESS`,\n      payload: {\n        books\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `ADD_BOOK_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\nexport function* moveBook(): IterableIterator<any> {\n  yield takeEvery(`MOVE_BOOK`, function*(action: any) {\n    try {\n      const { body } = action\n      let bookS:any = yield call(request, 'GET', 'books')\n      let arr:any = []\n      bookS.map((book:any) => {\n          if(action.body.find((title:any) => title == book.title)){\n            arr.push(book.id);\n          }\n        })\n      yield arr.forEach((item:any) =>  request(\"DELETE\" , `books/${item}`))\n      let books = yield call(request, 'GET', 'books')\n      alert(`You successfully deleted book`)\n    yield put({\n      type: `MOVE_BOOK_SUCCESS`,\n      payload: {\n        books\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `MOVE_BOOK_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\n","export default function request( method: string, url: string, body?: object) {\n    return (fetch(`http://localhost:3002/v1/${url}`, {\n        method: method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    }).then(response => response.json())\n    );\n}","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport request from './request'\n\nexport function* showUsers(): IterableIterator<any> {\n  yield takeEvery(`SHOW_USERS`, function*(action: any) {\n    try {\n      \n      let users = yield call(request, 'GET', 'users')\n    \n    yield put({\n      type: `SHOW_USERS_SUCCESS`,\n      payload: {\n        users\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `SHOW_USERS_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\nexport function* updateUser(): IterableIterator<any> {\n  yield takeEvery(`UPDATE_USER`, function*(action: any) {\n    try {\n\n      const { id, body } = action\n      yield call(request, \"PUT\", `users/${action.id}`, body)\n      \n      let users = yield call(request, 'GET', 'users')\n    \n    yield put({\n      type: `UPDATE_USER_SUCCESS`,\n      payload: {\n        users\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `UPDATE_USER_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\n\nexport function* moveUser(): IterableIterator<any> {\n  yield takeEvery(`MOVE_USER`, function*(action: any) {\n    try {\n      const { user } = action\n      yield call(request, 'DELETE', `users/${action.body}`)\n\n      let users = yield call(request, 'GET', 'users')\n      \n    yield put({\n      type: `MOVE_USER_SUCCESS`,\n      payload: {\n        users\n      }\n    });\n      \n    } catch (error) {\n      yield put({\n        type: `MOVE_USER_FAILED`,\n        payload: {\n          error: error.message\n        }\n      });\n    }\n  });\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n  }),\n);\n\n\nconst BookInfo: React.FC  = (props:any) => {\n    const classes = useStyles();\n   const data = props.location.state.bookInfo\n   const addItem = (id:any) => {\n    const { addToCart } = props\n    addToCart( id ) ;\n}\n   \n        return(\n                <div style={{\n                    width: \"50%\",\n                    margin: \"-20px auto\",\n                    backgroundColor: \"#f0f8ff\",\n                    height: \"100vh\",\n                    padding: \"100px 50px\",\n                    boxShadow: \"0px 0px 28px 0px\"\n                }}>\n                    <img \n                        style={{width: \"400px\", margin: \"0 0 50px 0\"}}\n                        src={data.image} \n                        alt={data.title}\n                    />\n                    <h1><span>{data.title}</span></h1>\n                    <h2>{data.price}</h2>\n                    <p\n                        style={{\n                            width: \"70%\",\n                            margin: \"-40px auto\",\n                            backgroundColor: \"#f0f8ff\",\n                            padding: \"100px 50px\",\n                            lineHeight: \"43px\"\n                        }}\n                    >{data.description}</p>\n                    <span>\n                        <Button  variant=\"outlined\" color=\"primary\" className={classes.button}>\n                           <Link\n                            style = {{\n                                textDecoration: \"none\",\n                                color: \"inherit\"\n                            }}\n                           to=\"/home\"> Go Back</Link>\n                        </Button>\n                    </span>\n                    \n                    <span>\n                        <Button\n                        onClick = {() => addItem(data.bookId)}\n                        variant=\"outlined\" color=\"primary\" className={classes.button}>\n                            Add To Cart\n                        </Button>\n                    </span>\n                    \n                                    \n                </div>\n            \n        )\n  \n    \n }\nexport default BookInfo","import { connect } from 'react-redux'\nimport  BookInfo  from '../components/bookinfo/bookinfo'\nimport { RootState } from \"../redux/rootReducer\";\nimport { addToCart } from \"../redux/addToCart/actions\"\n\nconst mapStateToProps = (state: RootState) => ({\n    data: state.login.data,\n    id: state.addToCart.id\n});\n\nexport default connect(mapStateToProps,{addToCart})(BookInfo)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst TextFields:React.FC<any> = (props) => {\n  return (\n         <TextField\n        id=\"standard-dense\"\n        label={props.title}\n        defaultValue={props.value}\n        className={props.class}\n        margin=\"dense\"\n      />\n  );\n}\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStylesModal = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\nconst SimpleModal1:React.FC <any> = (props) =>  {\n  const classes = useStylesModal();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <button \n       style={{\n        padding: \"0\",\n        margin: \"0\",\n        backgroundColor: \"#d1dfec\",\n        border: \"none\",\n        width: \"100px\",\n        height: \"30px\",\n        cursor: \"pointer\"\n      }}\n     \n      type=\"button\" \n      onClick = {handleOpen}\n      >\n        Change Details\n      </button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Details will be updated automaticaly during typing in textareas</h2>\n          {props.userDetails.map((prop:any) => {\n              return <TextFields class={`text-area-details${Object.keys(prop)}`} key={`${Object.values(prop)}+${Object.keys(prop)}`} value={Object.values(prop)} title={Object.keys(prop)}/> \n          })}\n          <button\n          style={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"23px\",\n            backgroundColor: \"#d1dfec\",\n            border: \"none\",\n            width: \"100px\",\n            height: \"30px\",\n            cursor: \"pointer\"\n          }}\n          onClick = {props.doAction}\n          >Submit</button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nconst useStylesUserINfo = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n  }),\n);\n\nconst UserInfo: React.FC <any> = (props) => {\n    \n    const classes = useStylesUserINfo();\n   const data = props\n  \n   let createTitles = () => {\n       let titles:any =[];\n       for(let title in data.userinfo.details){\n           if(title !== \"address\"){titles.push({[title]: data.userinfo.details[title]})}\n       }\n       for(let addr in data.userinfo.details.address){\n        titles.push({[addr]: data.userinfo.details.address[addr]})\n    }\n       return titles\n   }\n\nconst update = (id:number) => {\n    let email1 = document.getElementsByClassName(\"text-area-detailsemail\")[0].children[1].children[0] as HTMLInputElement\n    let city1 = document.getElementsByClassName(\"text-area-detailscity\")[0].children[1].children[0] as HTMLInputElement\n    let mobile1 = document.getElementsByClassName(\"text-area-detailsmobile\")[0].children[1].children[0] as HTMLInputElement\n    let website1 = document.getElementsByClassName(\"text-area-detailswebsite\")[0].children[1].children[0] as HTMLInputElement\n    let street1 = document.getElementsByClassName(\"text-area-detailsstreet\")[0].children[1].children[0] as HTMLInputElement\n    let house1 = document.getElementsByClassName(\"text-area-detailshouse\")[0].children[1].children[0] as HTMLInputElement\n    let appartment1 = document.getElementsByClassName(\"text-area-detailsappartment\")[0].children[1].children[0] as HTMLInputElement\n    let country1 = document.getElementsByClassName(\"text-area-detailscountry\")[0].children[1].children[0] as HTMLInputElement\n\n          let body = {\n            img: data.userinfo.userImage,  \n            login: data.userinfo.login,\n            email: email1.value,\n            password: data.userinfo.password,\n            isAdmin: data.userinfo.isAdmin,\n            details: {\n                email: email1.value,\n                address: {\n                    country: country1.value,\n                    city: city1.value,\n                    street: street1.value,\n                    house: house1.value,\n                    appartment: appartment1.value\n                },\n                mobile: mobile1.value,\n                website: website1.value\n            }\n          }\n        const { updateUser } = props;\n        updateUser(id, body)\n        };\n   \n\n        return(\n                <div style={{\n                    width: \"50%\",\n                    margin: \"-20px auto\",\n                    backgroundColor: \"#f0f8ff\",\n                    height: \"100vh\",\n                    padding: \"100px 50px\",\n                    boxShadow: \"0px 0px 28px 0px\"\n                }}>\n                    <img \n                        style={{width: \"400px\", margin: \"0 0 50px 0\"}}\n                        src={data.userinfo.userImage} \n                        alt=\"userImage\"\n                    />\n                    <h1><span>{data.userinfo.details.email}</span></h1>\n                    <h2>{data.userinfo.details.mobile}</h2>\n                    <p\n                        style={{\n                            width: \"70%\",\n                            margin: \"-40px auto\",\n                            backgroundColor: \"#f0f8ff\",\n                            padding: \"100px 50px\",\n                            lineHeight: \"43px\"\n                        }}\n                    ><a href={data.userinfo.details.website}>{data.userinfo.details.website}</a></p>\n                    <span>\n                        <Button  variant=\"outlined\" color=\"primary\" className={classes.button}>\n                           <Link\n                            style = {{\n                                textDecoration: \"none\",\n                                color: \"inherit\"\n                            }}\n                           to={data.userinfo.isAdmin ? \"/home-admin\" : \"/home\"}> Go Back</Link>\n                        </Button>\n                    </span>\n                    <span>\n                            <SimpleModal1\n                            doAction = {(e:any) => update(data.userinfo.id)}\n                            userDetails={createTitles()}\n                            />\n                    </span>             \n                </div>\n        )\n}\n export default UserInfo\n\n","import { connect } from 'react-redux'\nimport  UserInfo  from '../components/userinfo/userinfo.tsx'\nimport { RootState } from \"../redux/rootReducer\";\nimport { doLogin } from \"../redux/login/actions\"\nimport { updateUser } from '../redux/showUsers/actions'\n\nconst mapStateToProps = (state: RootState) => ({\n    userinfo: state.login\n});\n\nexport default connect(mapStateToProps,{doLogin, updateUser})(UserInfo)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\nimport LoginComponent from './containers/loginContainer';\nimport RegisterComponent from './containers/registerContainer'\nimport HomeComponent from './components/home/homeComponent';\nimport HomeAdminComponent from './containers/homeAdminContainer';\nimport {BrowserRouter as Router, Route,} from \"react-router-dom\";\nimport HeaderComponent from './containers/headerContainer';\nimport { Provider } from \"react-redux\";\nimport configureStore from './redux/store';\nimport { RootState } from \"../src/redux/rootReducer\";\nimport { Store } from \"redux\";\nimport BookInfo from './containers/bookInfoContainer'\nimport UserInfo from './containers/userInfoContainer'\n\nconst store: Store<RootState> = configureStore();\n\nconst MainMain: React.FC = () => {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <HeaderComponent></HeaderComponent>\n            <Route path=\"/home\" component={HomeComponent}/>\n            <Route path=\"/home-admin\" component={HomeAdminComponent}></Route>\n            <Route path=\"/login\" component={LoginComponent}/>\n            <Route path=\"/register\" component={RegisterComponent}></Route>\n            <Route path=\"/bookInfo\" component={BookInfo}></Route>\n            <Route path=\"/userInfo\" component={UserInfo}></Route>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n  \n\nReactDOM.render(<MainMain />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer, { RootState } from \"./rootReducer\";\nimport { doRegister } from \"./registration/sagasRegister\";\n\nimport { all } from \"redux-saga/effects\";\nimport { doLogin } from \"./login/sagasLogin\";\n\nimport { loadState, saveState } from './localStorage'\nimport { addToCart, moveFromCart } from \"./addToCart/sagasAddToCart\";\nimport { showBooks, updateBook, addBook, moveBook } from \"./showBooks/sagasShowBooks\";\nimport { showUsers, moveUser, updateUser } from \"./showUsers/sagasShowUsers\";\n\n\n\nexport default function configureStore(\n  initialState?: RootState\n): Store<RootState> {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n\n  const composeEnhancers = composeWithDevTools({});\n\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n  const persistedState = loadState();\n  const store = createStore(rootReducer, persistedState, enhancer);\n  store.subscribe(() => {\n    saveState({\n      login: store.getState().login,\n      addToCart: store.getState().addToCart\n    });\n  });\n\n  \n\n\n  sagaMiddleware.run(function* () {\n    yield all([\n      doRegister(),\n      doLogin(),\n      addToCart(),\n      moveFromCart(),\n      showBooks(),\n      updateBook(),\n      addBook(),\n      moveBook(),\n      showUsers(),\n      moveUser(),\n      updateUser()\n    ]);\n  });\n\n  return store;\n}\n"],"sourceRoot":""}